Search.appendIndex(
    [
                {
            "fqsen": "\\Flow\\Types\\DSL\\type_structure\u0028\u0029",
            "name": "type_structure",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_structure"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_union\u0028\u0029",
            "name": "type_union",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_union"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_optional\u0028\u0029",
            "name": "type_optional",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_optional"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_from_array\u0028\u0029",
            "name": "type_from_array",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_from_array"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_is_nullable\u0028\u0029",
            "name": "type_is_nullable",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_is_nullable"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_equals\u0028\u0029",
            "name": "type_equals",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_equals"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\types\u0028\u0029",
            "name": "types",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_types"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_list\u0028\u0029",
            "name": "type_list",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_list"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_map\u0028\u0029",
            "name": "type_map",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_map"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_json\u0028\u0029",
            "name": "type_json",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_json"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_datetime\u0028\u0029",
            "name": "type_datetime",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_datetime"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_date\u0028\u0029",
            "name": "type_date",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_date"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_time\u0028\u0029",
            "name": "type_time",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_time"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_xml\u0028\u0029",
            "name": "type_xml",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_xml"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_xml_element\u0028\u0029",
            "name": "type_xml_element",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_xml_element"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_uuid\u0028\u0029",
            "name": "type_uuid",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_uuid"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_integer\u0028\u0029",
            "name": "type_integer",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_integer"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_string\u0028\u0029",
            "name": "type_string",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_string"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_float\u0028\u0029",
            "name": "type_float",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_float"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_boolean\u0028\u0029",
            "name": "type_boolean",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_boolean"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_instance_of\u0028\u0029",
            "name": "type_instance_of",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_instance_of"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_object\u0028\u0029",
            "name": "type_object",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_object"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_scalar\u0028\u0029",
            "name": "type_scalar",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_scalar"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_resource\u0028\u0029",
            "name": "type_resource",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_resource"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_array\u0028\u0029",
            "name": "type_array",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_array"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_callable\u0028\u0029",
            "name": "type_callable",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_callable"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_null\u0028\u0029",
            "name": "type_null",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_null"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_positive_integer\u0028\u0029",
            "name": "type_positive_integer",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_positive_integer"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_non_empty_string\u0028\u0029",
            "name": "type_non_empty_string",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_non_empty_string"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_enum\u0028\u0029",
            "name": "type_enum",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_enum"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_is\u0028\u0029",
            "name": "type_is",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_is"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\type_is_any\u0028\u0029",
            "name": "type_is_any",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_type_is_any"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\get_type\u0028\u0029",
            "name": "get_type",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_get_type"
        },                {
            "fqsen": "\\Flow\\Types\\DSL\\dom_element_to_string\u0028\u0029",
            "name": "dom_element_to_string",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html#function_dom_element_to_string"
        },                {
            "fqsen": "\\Flow\\Types\\Exception\\CastingException",
            "name": "CastingException",
            "summary": "",
            "url": "classes/Flow-Types-Exception-CastingException.html"
        },                {
            "fqsen": "\\Flow\\Types\\Exception\\CastingException\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Exception-CastingException.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Exception\\CastingException\u003A\u003A\u0024value",
            "name": "value",
            "summary": "",
            "url": "classes/Flow-Types-Exception-CastingException.html#property_value"
        },                {
            "fqsen": "\\Flow\\Types\\Exception\\CastingException\u003A\u003A\u0024type",
            "name": "type",
            "summary": "",
            "url": "classes/Flow-Types-Exception-CastingException.html#property_type"
        },                {
            "fqsen": "\\Flow\\Types\\Exception\\Exception",
            "name": "Exception",
            "summary": "",
            "url": "classes/Flow-Types-Exception-Exception.html"
        },                {
            "fqsen": "\\Flow\\Types\\Exception\\InvalidArgumentException",
            "name": "InvalidArgumentException",
            "summary": "",
            "url": "classes/Flow-Types-Exception-InvalidArgumentException.html"
        },                {
            "fqsen": "\\Flow\\Types\\Exception\\InvalidTypeException",
            "name": "InvalidTypeException",
            "summary": "",
            "url": "classes/Flow-Types-Exception-InvalidTypeException.html"
        },                {
            "fqsen": "\\Flow\\Types\\Exception\\InvalidTypeException\u003A\u003Atype\u0028\u0029",
            "name": "type",
            "summary": "",
            "url": "classes/Flow-Types-Exception-InvalidTypeException.html#method_type"
        },                {
            "fqsen": "\\Flow\\Types\\Exception\\InvalidTypeException\u003A\u003Avalue\u0028\u0029",
            "name": "value",
            "summary": "",
            "url": "classes/Flow-Types-Exception-InvalidTypeException.html#method_value"
        },                {
            "fqsen": "\\Flow\\Types\\Exception\\RuntimeException",
            "name": "RuntimeException",
            "summary": "",
            "url": "classes/Flow-Types-Exception-RuntimeException.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\ArrayContentDetector",
            "name": "ArrayContentDetector",
            "summary": "",
            "url": "classes/Flow-Types-Type-ArrayContentDetector.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\ArrayContentDetector\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Type-ArrayContentDetector.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\ArrayContentDetector\u003A\u003AfirstKeyType\u0028\u0029",
            "name": "firstKeyType",
            "summary": "",
            "url": "classes/Flow-Types-Type-ArrayContentDetector.html#method_firstKeyType"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\ArrayContentDetector\u003A\u003AfirstValueType\u0028\u0029",
            "name": "firstValueType",
            "summary": "",
            "url": "classes/Flow-Types-Type-ArrayContentDetector.html#method_firstValueType"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\ArrayContentDetector\u003A\u003AisList\u0028\u0029",
            "name": "isList",
            "summary": "",
            "url": "classes/Flow-Types-Type-ArrayContentDetector.html#method_isList"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\ArrayContentDetector\u003A\u003AisMap\u0028\u0029",
            "name": "isMap",
            "summary": "",
            "url": "classes/Flow-Types-Type-ArrayContentDetector.html#method_isMap"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\ArrayContentDetector\u003A\u003AisStructure\u0028\u0029",
            "name": "isStructure",
            "summary": "",
            "url": "classes/Flow-Types-Type-ArrayContentDetector.html#method_isStructure"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\ArrayContentDetector\u003A\u003AvalueType\u0028\u0029",
            "name": "valueType",
            "summary": "",
            "url": "classes/Flow-Types-Type-ArrayContentDetector.html#method_valueType"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\AutoCaster",
            "name": "AutoCaster",
            "summary": "",
            "url": "classes/Flow-Types-Type-AutoCaster.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\AutoCaster\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "",
            "url": "classes/Flow-Types-Type-AutoCaster.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparator",
            "name": "Comparator",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparator.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparator\u003A\u003Acomparable\u0028\u0029",
            "name": "comparable",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparator.html#method_comparable"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparator\u003A\u003Aequals\u0028\u0029",
            "name": "equals",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparator.html#method_equals"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparator\u003A\u003Ais\u0028\u0029",
            "name": "is",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparator.html#method_is"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparator\u003A\u003AisAny\u0028\u0029",
            "name": "isAny",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparator.html#method_isAny"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparison\\Operator",
            "name": "Operator",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparison-Operator.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparison\\Operator\u003A\u003ADIFFERENT",
            "name": "DIFFERENT",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparison-Operator.html#enumcase_DIFFERENT"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparison\\Operator\u003A\u003AEQUAL",
            "name": "EQUAL",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparison-Operator.html#enumcase_EQUAL"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparison\\Operator\u003A\u003AGREATER_THAN",
            "name": "GREATER_THAN",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparison-Operator.html#enumcase_GREATER_THAN"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparison\\Operator\u003A\u003AGREATER_THAN_EQUAL",
            "name": "GREATER_THAN_EQUAL",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparison-Operator.html#enumcase_GREATER_THAN_EQUAL"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparison\\Operator\u003A\u003AIDENTICAL",
            "name": "IDENTICAL",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparison-Operator.html#enumcase_IDENTICAL"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparison\\Operator\u003A\u003ALESS_THAN",
            "name": "LESS_THAN",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparison-Operator.html#enumcase_LESS_THAN"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparison\\Operator\u003A\u003ALESS_THAN_EQUAL",
            "name": "LESS_THAN_EQUAL",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparison-Operator.html#enumcase_LESS_THAN_EQUAL"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparison\\Operator\u003A\u003ANOT_EQUAL",
            "name": "NOT_EQUAL",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparison-Operator.html#enumcase_NOT_EQUAL"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparison\\Operator\u003A\u003ANOT_IDENTICAL",
            "name": "NOT_IDENTICAL",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparison-Operator.html#enumcase_NOT_IDENTICAL"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparison\\Operator\u003A\u003ASPACE_SHIP",
            "name": "SPACE_SHIP",
            "summary": "",
            "url": "classes/Flow-Types-Type-Comparison-Operator.html#enumcase_SPACE_SHIP"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\DateTimeType",
            "name": "DateTimeType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-DateTimeType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\DateTimeType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-DateTimeType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\DateTimeType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-DateTimeType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\DateTimeType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-DateTimeType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\DateTimeType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-DateTimeType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\DateTimeType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-DateTimeType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\DateType",
            "name": "DateType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-DateType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\DateType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-DateType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\DateType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-DateType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\DateType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-DateType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\DateType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-DateType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\DateType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-DateType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\InstanceOfType",
            "name": "InstanceOfType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-InstanceOfType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\InstanceOfType\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-InstanceOfType.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\InstanceOfType\u003A\u003AfromArray\u0028\u0029",
            "name": "fromArray",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-InstanceOfType.html#method_fromArray"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\InstanceOfType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-InstanceOfType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\InstanceOfType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-InstanceOfType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\InstanceOfType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-InstanceOfType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\InstanceOfType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-InstanceOfType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\InstanceOfType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-InstanceOfType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\InstanceOfType\u003A\u003A\u0024class",
            "name": "class",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-InstanceOfType.html#property_class"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\JsonType",
            "name": "JsonType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-JsonType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\JsonType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-JsonType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\JsonType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-JsonType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\JsonType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-JsonType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\JsonType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-JsonType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\JsonType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-JsonType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ListType",
            "name": "ListType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-ListType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ListType\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-ListType.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ListType\u003A\u003AfromArray\u0028\u0029",
            "name": "fromArray",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-ListType.html#method_fromArray"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ListType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-ListType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ListType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-ListType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ListType\u003A\u003Aelement\u0028\u0029",
            "name": "element",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-ListType.html#method_element"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ListType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-ListType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ListType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-ListType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ListType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-ListType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\MapType",
            "name": "MapType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-MapType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\MapType\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-MapType.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\MapType\u003A\u003AfromArray\u0028\u0029",
            "name": "fromArray",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-MapType.html#method_fromArray"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\MapType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-MapType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\MapType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-MapType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\MapType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-MapType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\MapType\u003A\u003Akey\u0028\u0029",
            "name": "key",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-MapType.html#method_key"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\MapType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-MapType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\MapType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-MapType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\MapType\u003A\u003Avalue\u0028\u0029",
            "name": "value",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-MapType.html#method_value"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\NonEmptyStringType",
            "name": "NonEmptyStringType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-NonEmptyStringType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\NonEmptyStringType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-NonEmptyStringType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\NonEmptyStringType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-NonEmptyStringType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\NonEmptyStringType\u003A\u003AisStringable\u0028\u0029",
            "name": "isStringable",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-NonEmptyStringType.html#method_isStringable"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\NonEmptyStringType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-NonEmptyStringType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\NonEmptyStringType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-NonEmptyStringType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\NonEmptyStringType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-NonEmptyStringType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\OptionalType",
            "name": "OptionalType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-OptionalType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\OptionalType\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-OptionalType.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\OptionalType\u003A\u003AfromArray\u0028\u0029",
            "name": "fromArray",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-OptionalType.html#method_fromArray"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\OptionalType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-OptionalType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\OptionalType\u003A\u003Abase\u0028\u0029",
            "name": "base",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-OptionalType.html#method_base"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\OptionalType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-OptionalType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\OptionalType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-OptionalType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\OptionalType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-OptionalType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\OptionalType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-OptionalType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\PositiveIntegerType",
            "name": "PositiveIntegerType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-PositiveIntegerType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\PositiveIntegerType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-PositiveIntegerType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\PositiveIntegerType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-PositiveIntegerType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\PositiveIntegerType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-PositiveIntegerType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\PositiveIntegerType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-PositiveIntegerType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\PositiveIntegerType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-PositiveIntegerType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ScalarType",
            "name": "ScalarType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-ScalarType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ScalarType\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-ScalarType.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ScalarType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-ScalarType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ScalarType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-ScalarType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ScalarType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-ScalarType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ScalarType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-ScalarType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\ScalarType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-ScalarType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\StructureType",
            "name": "StructureType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-StructureType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\StructureType\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-StructureType.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\StructureType\u003A\u003AfromArray\u0028\u0029",
            "name": "fromArray",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-StructureType.html#method_fromArray"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\StructureType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-StructureType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\StructureType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-StructureType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\StructureType\u003A\u003Aelements\u0028\u0029",
            "name": "elements",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-StructureType.html#method_elements"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\StructureType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-StructureType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\StructureType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-StructureType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\StructureType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-StructureType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\TimeType",
            "name": "TimeType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-TimeType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\TimeType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-TimeType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\TimeType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-TimeType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\TimeType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-TimeType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\TimeType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-TimeType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\TimeType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-TimeType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\UuidType",
            "name": "UuidType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-UuidType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\UuidType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-UuidType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\UuidType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-UuidType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\UuidType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-UuidType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\UuidType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-UuidType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\UuidType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-UuidType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XML\\XMLConverter",
            "name": "XMLConverter",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-XML-XMLConverter.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XML\\XMLConverter\u003A\u003AtoArray\u0028\u0029",
            "name": "toArray",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-XML-XMLConverter.html#method_toArray"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XMLElementType",
            "name": "XMLElementType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-XMLElementType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XMLElementType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-XMLElementType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XMLElementType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-XMLElementType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XMLElementType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-XMLElementType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XMLElementType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-XMLElementType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XMLElementType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-XMLElementType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XMLType",
            "name": "XMLType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-XMLType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XMLType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-XMLType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XMLType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-XMLType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XMLType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Logical-XMLType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XMLType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Logical-XMLType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XMLType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Logical-XMLType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ArrayType",
            "name": "ArrayType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-ArrayType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ArrayType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Native-ArrayType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ArrayType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-ArrayType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ArrayType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-ArrayType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ArrayType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-ArrayType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ArrayType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Native-ArrayType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\BooleanType",
            "name": "BooleanType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-BooleanType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\BooleanType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Native-BooleanType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\BooleanType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-BooleanType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\BooleanType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-BooleanType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\BooleanType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-BooleanType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\BooleanType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Native-BooleanType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\CallableType",
            "name": "CallableType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-CallableType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\CallableType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Native-CallableType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\CallableType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-CallableType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\CallableType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-CallableType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\CallableType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-CallableType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\CallableType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Native-CallableType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\EnumType",
            "name": "EnumType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-EnumType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\EnumType\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-EnumType.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\EnumType\u003A\u003AfromArray\u0028\u0029",
            "name": "fromArray",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-EnumType.html#method_fromArray"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\EnumType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Native-EnumType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\EnumType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-EnumType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\EnumType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-EnumType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\EnumType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-EnumType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\EnumType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Native-EnumType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\EnumType\u003A\u003A\u0024class",
            "name": "class",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-EnumType.html#property_class"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\FloatType",
            "name": "FloatType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-FloatType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\FloatType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Native-FloatType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\FloatType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-FloatType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\FloatType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-FloatType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\FloatType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-FloatType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\FloatType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Native-FloatType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\IntegerType",
            "name": "IntegerType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-IntegerType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\IntegerType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Native-IntegerType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\IntegerType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-IntegerType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\IntegerType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-IntegerType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\IntegerType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-IntegerType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\IntegerType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Native-IntegerType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\NullType",
            "name": "NullType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-NullType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\NullType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Native-NullType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\NullType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-NullType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\NullType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-NullType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\NullType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-NullType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\NullType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Native-NullType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ObjectType",
            "name": "ObjectType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-ObjectType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ObjectType\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-ObjectType.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ObjectType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Native-ObjectType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ObjectType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-ObjectType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ObjectType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-ObjectType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ObjectType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-ObjectType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ObjectType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Native-ObjectType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ResourceType",
            "name": "ResourceType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-ResourceType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ResourceType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Native-ResourceType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ResourceType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-ResourceType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ResourceType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-ResourceType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ResourceType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-ResourceType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\ResourceType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Native-ResourceType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\String\\StringTypeChecker",
            "name": "StringTypeChecker",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-String-StringTypeChecker.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\String\\StringTypeChecker\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-String-StringTypeChecker.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\String\\StringTypeChecker\u003A\u003AisBoolean\u0028\u0029",
            "name": "isBoolean",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-String-StringTypeChecker.html#method_isBoolean"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\String\\StringTypeChecker\u003A\u003AisDate\u0028\u0029",
            "name": "isDate",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-String-StringTypeChecker.html#method_isDate"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\String\\StringTypeChecker\u003A\u003AisDateTime\u0028\u0029",
            "name": "isDateTime",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-String-StringTypeChecker.html#method_isDateTime"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\String\\StringTypeChecker\u003A\u003AisFloat\u0028\u0029",
            "name": "isFloat",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-String-StringTypeChecker.html#method_isFloat"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\String\\StringTypeChecker\u003A\u003AisInteger\u0028\u0029",
            "name": "isInteger",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-String-StringTypeChecker.html#method_isInteger"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\String\\StringTypeChecker\u003A\u003AisJson\u0028\u0029",
            "name": "isJson",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-String-StringTypeChecker.html#method_isJson"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\String\\StringTypeChecker\u003A\u003AisNull\u0028\u0029",
            "name": "isNull",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-String-StringTypeChecker.html#method_isNull"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\String\\StringTypeChecker\u003A\u003AisUuid\u0028\u0029",
            "name": "isUuid",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-String-StringTypeChecker.html#method_isUuid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\String\\StringTypeChecker\u003A\u003AisXML\u0028\u0029",
            "name": "isXML",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-String-StringTypeChecker.html#method_isXML"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\String\\StringTypeChecker\u003A\u003Avalue\u0028\u0029",
            "name": "value",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-String-StringTypeChecker.html#method_value"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\StringType",
            "name": "StringType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-StringType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\StringType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Native-StringType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\StringType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-StringType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\StringType\u003A\u003AisStringable\u0028\u0029",
            "name": "isStringable",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-StringType.html#method_isStringable"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\StringType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-StringType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\StringType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-StringType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\StringType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Native-StringType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\UnionType",
            "name": "UnionType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-UnionType.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\UnionType\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-UnionType.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\UnionType\u003A\u003AfromArray\u0028\u0029",
            "name": "fromArray",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-UnionType.html#method_fromArray"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\UnionType\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Native-UnionType.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\UnionType\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-UnionType.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\UnionType\u003A\u003AisOptionalType\u0028\u0029",
            "name": "isOptionalType",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-UnionType.html#method_isOptionalType"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\UnionType\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Native-UnionType.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\UnionType\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-UnionType.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\UnionType\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Native-UnionType.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\UnionType\u003A\u003Atypes\u0028\u0029",
            "name": "types",
            "summary": "",
            "url": "classes/Flow-Types-Type-Native-UnionType.html#method_types"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Type",
            "name": "Type",
            "summary": "",
            "url": "classes/Flow-Types-Type-Type.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Type\u003A\u003Aassert\u0028\u0029",
            "name": "assert",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020given\u0020type.",
            "url": "classes/Flow-Types-Type-Type.html#method_assert"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Type\u003A\u003Acast\u0028\u0029",
            "name": "cast",
            "summary": "Takes\u0020a\u0020value\u0020and\u0020when\u0020necessary\u0020casts\u0020it\u0020to\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Type.html#method_cast"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Type\u003A\u003AisValid\u0028\u0029",
            "name": "isValid",
            "summary": "Checks\u0020if\u0020the\u0020value\u0020is\u0020of\u0020the\u0020type\u0020of\u0020this\u0020object.",
            "url": "classes/Flow-Types-Type-Type.html#method_isValid"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Type\u003A\u003Anormalize\u0028\u0029",
            "name": "normalize",
            "summary": "",
            "url": "classes/Flow-Types-Type-Type.html#method_normalize"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Type\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "Returns\u0020a\u0020string\u0020representation\u0020of\u0020the\u0020type.",
            "url": "classes/Flow-Types-Type-Type.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\TypeDetector",
            "name": "TypeDetector",
            "summary": "",
            "url": "classes/Flow-Types-Type-TypeDetector.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\TypeDetector\u003A\u003AdetectType\u0028\u0029",
            "name": "detectType",
            "summary": "",
            "url": "classes/Flow-Types-Type-TypeDetector.html#method_detectType"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\TypeFactory",
            "name": "TypeFactory",
            "summary": "",
            "url": "classes/Flow-Types-Type-TypeFactory.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\TypeFactory\u003A\u003AfromArray\u0028\u0029",
            "name": "fromArray",
            "summary": "",
            "url": "classes/Flow-Types-Type-TypeFactory.html#method_fromArray"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\TypeFactory\u003A\u003AfromString\u0028\u0029",
            "name": "fromString",
            "summary": "",
            "url": "classes/Flow-Types-Type-TypeFactory.html#method_fromString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Types",
            "name": "Types",
            "summary": "Unique\u0020collection\u0020of\u0020types.",
            "url": "classes/Flow-Types-Type-Types.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Types\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Type-Types.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Types\u003A\u003A__toString\u0028\u0029",
            "name": "__toString",
            "summary": "",
            "url": "classes/Flow-Types-Type-Types.html#method___toString"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Types\u003A\u003Aall\u0028\u0029",
            "name": "all",
            "summary": "",
            "url": "classes/Flow-Types-Type-Types.html#method_all"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Types\u003A\u003Acount\u0028\u0029",
            "name": "count",
            "summary": "",
            "url": "classes/Flow-Types-Type-Types.html#method_count"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Types\u003A\u003Adeduplicate\u0028\u0029",
            "name": "deduplicate",
            "summary": "",
            "url": "classes/Flow-Types-Type-Types.html#method_deduplicate"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Types\u003A\u003Afirst\u0028\u0029",
            "name": "first",
            "summary": "",
            "url": "classes/Flow-Types-Type-Types.html#method_first"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Types\u003A\u003Ahas\u0028\u0029",
            "name": "has",
            "summary": "",
            "url": "classes/Flow-Types-Type-Types.html#method_has"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Types\u003A\u003AhasAll\u0028\u0029",
            "name": "hasAll",
            "summary": "",
            "url": "classes/Flow-Types-Type-Types.html#method_hasAll"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Types\u003A\u003AhasAny\u0028\u0029",
            "name": "hasAny",
            "summary": "",
            "url": "classes/Flow-Types-Type-Types.html#method_hasAny"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Types\u003A\u003Aonly\u0028\u0029",
            "name": "only",
            "summary": "",
            "url": "classes/Flow-Types-Type-Types.html#method_only"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Types\u003A\u003AreduceOptionals\u0028\u0029",
            "name": "reduceOptionals",
            "summary": "Reduce\u0020optional\u0020types\u0020to\u0020their\u0020base\u0020types.",
            "url": "classes/Flow-Types-Type-Types.html#method_reduceOptionals"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Types\u003A\u003Awithout\u0028\u0029",
            "name": "without",
            "summary": "",
            "url": "classes/Flow-Types-Type-Types.html#method_without"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\ValueComparator",
            "name": "ValueComparator",
            "summary": "",
            "url": "classes/Flow-Types-Type-ValueComparator.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\ValueComparator\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Type-ValueComparator.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\ValueComparator\u003A\u003AassertAllComparable\u0028\u0029",
            "name": "assertAllComparable",
            "summary": "",
            "url": "classes/Flow-Types-Type-ValueComparator.html#method_assertAllComparable"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\ValueComparator\u003A\u003AassertComparable\u0028\u0029",
            "name": "assertComparable",
            "summary": "",
            "url": "classes/Flow-Types-Type-ValueComparator.html#method_assertComparable"
        },                {
            "fqsen": "\\Flow\\Types\\Value\\Uuid",
            "name": "Uuid",
            "summary": "",
            "url": "classes/Flow-Types-Value-Uuid.html"
        },                {
            "fqsen": "\\Flow\\Types\\Value\\Uuid\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/Flow-Types-Value-Uuid.html#method___construct"
        },                {
            "fqsen": "\\Flow\\Types\\Value\\Uuid\u003A\u003AfromString\u0028\u0029",
            "name": "fromString",
            "summary": "",
            "url": "classes/Flow-Types-Value-Uuid.html#method_fromString"
        },                {
            "fqsen": "\\Flow\\Types\\Value\\Uuid\u003A\u003A__toString\u0028\u0029",
            "name": "__toString",
            "summary": "",
            "url": "classes/Flow-Types-Value-Uuid.html#method___toString"
        },                {
            "fqsen": "\\Flow\\Types\\Value\\Uuid\u003A\u003AisEqual\u0028\u0029",
            "name": "isEqual",
            "summary": "",
            "url": "classes/Flow-Types-Value-Uuid.html#method_isEqual"
        },                {
            "fqsen": "\\Flow\\Types\\Value\\Uuid\u003A\u003AtoString\u0028\u0029",
            "name": "toString",
            "summary": "",
            "url": "classes/Flow-Types-Value-Uuid.html#method_toString"
        },                {
            "fqsen": "\\Flow\\Types\\Value\\Uuid\u003A\u003AUUID_REGEXP",
            "name": "UUID_REGEXP",
            "summary": "This\u0020regexp\u0020is\u0020a\u0020port\u0020of\u0020the\u0020Uuid\u0020library,\nwhich\u0020is\u0020copyright\u0020Ben\u0020Ramsey,\u0020\u0040see\u0020https\u003A\/\/github.com\/ramsey\/uuid.",
            "url": "classes/Flow-Types-Value-Uuid.html#constant_UUID_REGEXP"
        },                {
            "fqsen": "\\",
            "name": "\\",
            "summary": "",
            "url": "namespaces/default.html"
        },                {
            "fqsen": "\\Flow\\Types\\DSL",
            "name": "DSL",
            "summary": "",
            "url": "namespaces/flow-types-dsl.html"
        },                {
            "fqsen": "\\Flow\\Types",
            "name": "Types",
            "summary": "",
            "url": "namespaces/flow-types.html"
        },                {
            "fqsen": "\\Flow",
            "name": "Flow",
            "summary": "",
            "url": "namespaces/flow.html"
        },                {
            "fqsen": "\\Flow\\Types\\Exception",
            "name": "Exception",
            "summary": "",
            "url": "namespaces/flow-types-exception.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type",
            "name": "Type",
            "summary": "",
            "url": "namespaces/flow-types-type.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Comparison",
            "name": "Comparison",
            "summary": "",
            "url": "namespaces/flow-types-type-comparison.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical",
            "name": "Logical",
            "summary": "",
            "url": "namespaces/flow-types-type-logical.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Logical\\XML",
            "name": "XML",
            "summary": "",
            "url": "namespaces/flow-types-type-logical-xml.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native",
            "name": "Native",
            "summary": "",
            "url": "namespaces/flow-types-type-native.html"
        },                {
            "fqsen": "\\Flow\\Types\\Type\\Native\\String",
            "name": "String",
            "summary": "",
            "url": "namespaces/flow-types-type-native-string.html"
        },                {
            "fqsen": "\\Flow\\Types\\Value",
            "name": "Value",
            "summary": "",
            "url": "namespaces/flow-types-value.html"
        }            ]
);
